{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julyg\\\\Desktop\\\\mytestreactapp\\\\src\\\\Todo\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport Pagination from './Pagination';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  add: {\n    position: 'sticky',\n    left: '90%'\n  },\n  formInput: {\n    position: 'relative',\n    left: '35%',\n    margin: '2px'\n  },\n  input: {\n    width: '500px',\n    height: '40px'\n  },\n  add: {\n    position: 'absolute',\n    height: '40px'\n  }\n};\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      currentPage: 1,\n      todosPerPage: 10\n    };\n    this.onCheckedTodo = this.onCheckedTodo.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.setCurrentPage = this.setCurrentPage.bind(this);\n  }\n\n  onCheckedTodo(id) {\n    let todos = this.state.todos.map(value => {\n      if (value.id === id) {\n        value.complete = !value.complete;\n      }\n\n      return value;\n    });\n    this.setState({\n      todos\n    });\n  }\n\n  addTodo(event) {\n    event.preventDefault();\n\n    if (this.state.inputValue <= 0) {\n      alert('Заполните значение');\n    } else {\n      let todos = this.state.todos.concat([{\n        title: this.state.inputValue,\n        id: Math.floor(Math.random() * 1000),\n        complete: false\n      }]);\n      this.setState({\n        todos\n      });\n    }\n  }\n\n  deleteTodo(id) {\n    let todos = this.state.todos.filter(val => {\n      return val.id !== id;\n    });\n    this.setState({\n      todos: todos\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/todos').then(res => res.json()).then(res => this.setState({\n      todos: res\n    }));\n  }\n\n  setCurrentPage(num) {\n    this.setState({\n      currentPage: num\n    });\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    const lastTodoIndex = this.state.currentPage * this.state.todosPerPage;\n    const firstTodoIndex = lastTodoIndex - this.state.todosPerPage;\n    const currentTodos = todos.slice(firstTodoIndex, lastTodoIndex);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container row\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          style: styles.formInput,\n          onSubmit: this.addTodo,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: styles.input,\n            placeholder: \"type here...\",\n            onChange: event => {\n              this.setState({\n                inputValue: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.add,\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), currentTodos.map(val => {\n          return /*#__PURE__*/_jsxDEV(TodoItem, {\n            todo: val,\n            checked: this.onCheckedTodo,\n            deleteTodo: this.deleteTodo\n          }, val.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 28\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        todosPerPage: this.state.todosPerPage,\n        allTodos: this.state.todos.length,\n        setCurrentPage: this.setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/julyg/Desktop/mytestreactapp/src/Todo/TodoList.js"],"names":["React","Component","Pagination","TodoItem","styles","add","position","left","formInput","margin","input","width","height","TodoList","constructor","props","state","todos","currentPage","todosPerPage","onCheckedTodo","bind","addTodo","deleteTodo","setCurrentPage","id","map","value","complete","setState","event","preventDefault","inputValue","alert","concat","title","Math","floor","random","filter","val","componentDidMount","fetch","then","res","json","num","render","lastTodoIndex","firstTodoIndex","currentTodos","slice","target","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Pagination from './Pagination';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = {\r\n    add:{\r\n        position: 'sticky',\r\n        left: '90%'\r\n    },\r\n    formInput:{\r\n        position: 'relative',\r\n        left: '35%',\r\n        margin: '2px'\r\n    },\r\n    input:{\r\n        width: '500px',\r\n        height: '40px',\r\n        \r\n    },\r\n    add:{\r\n        position: 'absolute',\r\n        height: '40px'\r\n\r\n    }\r\n};\r\n\r\nexport default class TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: [],\r\n            currentPage: 1,\r\n            todosPerPage: 10\r\n        };\r\n        this.onCheckedTodo = this.onCheckedTodo.bind(this);\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.deleteTodo = this.deleteTodo.bind(this);\r\n        this.setCurrentPage = this.setCurrentPage.bind(this);\r\n    }\r\n\r\n    onCheckedTodo(id) {\r\n        let todos = this.state.todos.map((value) => {\r\n            if (value.id === id) {\r\n                value.complete = !value.complete\r\n            }\r\n            return value\r\n        })\r\n        this.setState({ todos })\r\n    }\r\n\r\n    addTodo(event) {\r\n        event.preventDefault();\r\n        if (this.state.inputValue <= 0) {\r\n            alert('Заполните значение')\r\n        }\r\n        else {\r\n            let todos = this.state.todos.concat([{\r\n                title: this.state.inputValue,\r\n                id: Math.floor(Math.random() * 1000),\r\n                complete: false\r\n            },\r\n            ]);\r\n            this.setState({ todos })\r\n        }\r\n    }\r\n\r\n    deleteTodo(id) {\r\n        let todos = this.state.todos.filter(val => {\r\n            return val.id !== id\r\n        })\r\n        this.setState({ todos: todos })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://jsonplaceholder.typicode.com/todos')\r\n            .then(res => res.json())\r\n            .then(res => this.setState({ todos: res }))\r\n    }\r\n\r\n    setCurrentPage(num){\r\n        this.setState({currentPage: num})\r\n    }\r\n\r\n\r\n    render() {\r\n        const { todos } = this.state;\r\n        const lastTodoIndex = this.state.currentPage * this.state.todosPerPage;\r\n        const firstTodoIndex = lastTodoIndex - this.state.todosPerPage;\r\n        const currentTodos = todos.slice(firstTodoIndex, lastTodoIndex);\r\n\r\n        return (\r\n            <div className=\"container row\">\r\n            <ul className=\"list-group\">\r\n                <form style={styles.formInput} onSubmit={this.addTodo}>\r\n                    <input  style={styles.input} placeholder='type here...'  onChange={(event) => { this.setState({ inputValue: event.target.value }) }} />\r\n                    <button style={styles.add} className=\"btn btn-primary\" type=\"submit\">Add</button>\r\n                </form>\r\n                {currentTodos.map((val) => {\r\n                    return <TodoItem todo={val} key={val.id} checked={this.onCheckedTodo} deleteTodo={this.deleteTodo} />  \r\n                })}\r\n                </ul>\r\n                <Pagination todosPerPage = {this.state.todosPerPage} allTodos = {this.state.todos.length} setCurrentPage = {this.setCurrentPage}/>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}