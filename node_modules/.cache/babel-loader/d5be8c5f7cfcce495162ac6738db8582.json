{"ast":null,"code":"var _jsxFileName = \"C:\\\\sitereact\\\\src\\\\Todo\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport Pagination from './Pagination';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  add: {\n    position: 'sticky',\n    left: '90%'\n  },\n  formIn: {\n    position: 'relative',\n    left: '25%',\n    margin: '2px'\n  },\n  input: {\n    width: '450px',\n    height: '40px'\n  },\n  add: {\n    position: 'absolute',\n    height: '40px'\n  },\n  container: {\n    position: 'relative',\n    marginLeft: '220px',\n    width: '1100px'\n  }\n};\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      inputValue: '',\n      currentPage: 1,\n      todoPerPage: 10\n    };\n    this.onCheckedTodo = this.onCheckedTodo.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.getCurrentPage = this.getCurrentPage.bind(this);\n  }\n\n  onCheckedTodo(id) {\n    let todos = this.state.todos.map(value => {\n      if (value.id === id) {\n        value.complete = !value.complete;\n      }\n\n      return value;\n    });\n    this.setState({\n      todos\n    });\n  }\n\n  addTodo(event) {\n    event.preventDefault();\n\n    if (this.state.inputValue <= 0) {\n      alert('Заполните значение');\n    } else {\n      let todos = this.state.todos.concat([{\n        title: this.state.inputValue,\n        id: Math.floor(Math.random() * 1000),\n        complete: false\n      }]);\n      this.setState({\n        todos\n      });\n    }\n  }\n\n  deleteTodo(id) {\n    let todos = this.state.todos.filter(val => {\n      return val.id !== id;\n    });\n    this.setState({\n      todos: todos\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/todos').then(res => res.json()).then(res => this.setState({\n      todos: res\n    }));\n  }\n\n  getCurrentPage(num) {\n    this.setState({\n      currentPage: num\n    });\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    const indexLastTodo = this.state.currentPage * this.state.todoPerPage;\n    const indexFirstTodo = indexLastTodo - this.state.todoPerPage;\n    const currentTodos = todos.slice(indexFirstTodo, indexLastTodo);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container row\",\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          style: styles.formIn,\n          onSubmit: this.addTodo,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: styles.input,\n            placeholder: \"type here...\",\n            onChange: event => {\n              this.setState({\n                inputValue: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.add,\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), currentTodos.map(val => {\n          return /*#__PURE__*/_jsxDEV(TodoItem, {\n            todo: val,\n            checked: this.onCheckedTodo,\n            deleteTodo: this.deleteTodo\n          }, val.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 32\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Pagination, {\n          todoPerPage: this.state.todoPerPage,\n          allTodos: this.state.todos.length,\n          getCurrentPage: this.getCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/sitereact/src/Todo/TodoList.js"],"names":["React","Component","Pagination","TodoItem","styles","add","position","left","formIn","margin","input","width","height","container","marginLeft","TodoList","constructor","props","state","todos","inputValue","currentPage","todoPerPage","onCheckedTodo","bind","addTodo","deleteTodo","getCurrentPage","id","map","value","complete","setState","event","preventDefault","alert","concat","title","Math","floor","random","filter","val","componentDidMount","fetch","then","res","json","num","render","indexLastTodo","indexFirstTodo","currentTodos","slice","target","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Pagination from './Pagination';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = {\r\n    add: {\r\n        position: 'sticky',\r\n        left: '90%'\r\n    },\r\n    formIn: {\r\n        position: 'relative',\r\n        left: '25%',\r\n        margin: '2px'\r\n    },\r\n    input: {\r\n        width: '450px',\r\n        height: '40px',\r\n\r\n    },\r\n    add: {\r\n        position: 'absolute',\r\n        height: '40px'\r\n\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n        marginLeft: '220px',\r\n        width: '1100px'\r\n    }\r\n};\r\n\r\nexport default class TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: [],\r\n            inputValue: '',\r\n            currentPage: 1,\r\n            todoPerPage: 10\r\n        };\r\n        this.onCheckedTodo = this.onCheckedTodo.bind(this);\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.deleteTodo = this.deleteTodo.bind(this);\r\n        this.getCurrentPage = this.getCurrentPage.bind(this);\r\n    }\r\n\r\n    onCheckedTodo(id) {\r\n        let todos = this.state.todos.map((value) => {\r\n            if (value.id === id) {\r\n                value.complete = !value.complete;\r\n            }\r\n            return value;\r\n        })\r\n        this.setState({ todos });\r\n    }\r\n\r\n    addTodo(event) {\r\n        event.preventDefault();\r\n        if (this.state.inputValue <= 0) {\r\n            alert('Заполните значение');\r\n        }\r\n        else {\r\n            let todos = this.state.todos.concat([{\r\n                title: this.state.inputValue,\r\n                id: Math.floor(Math.random() * 1000),\r\n                complete: false\r\n            },\r\n            ]);\r\n            this.setState({ todos })\r\n        }\r\n    }\r\n\r\n    deleteTodo(id) {\r\n        let todos = this.state.todos.filter(val => {\r\n            return val.id !== id;\r\n        })\r\n        this.setState({ todos: todos });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://jsonplaceholder.typicode.com/todos')\r\n            .then(res => res.json())\r\n            .then(res => this.setState({ todos: res }));\r\n    }\r\n\r\n    getCurrentPage(num) {\r\n        this.setState({ currentPage: num });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { todos } = this.state;\r\n        const indexLastTodo = this.state.currentPage * this.state.todoPerPage;\r\n        const indexFirstTodo = indexLastTodo - this.state.todoPerPage;\r\n        const currentTodos = todos.slice(indexFirstTodo, indexLastTodo);\r\n\r\n        return (\r\n            <div className=\"container row\" style={styles.container}>\r\n                <ul className=\"list-group\">\r\n                    <form style={styles.formIn} onSubmit={this.addTodo}>\r\n                        <input style={styles.input} placeholder='type here...' onChange={(event) => { this.setState({ inputValue: event.target.value }) }} />\r\n                        <button style={styles.add} className=\"btn btn-primary\" type=\"submit\">Add</button>\r\n                    </form>\r\n                    {currentTodos.map((val) => {\r\n                        return <TodoItem todo={val} key={val.id} checked={this.onCheckedTodo} deleteTodo={this.deleteTodo} />;\r\n                    })}\r\n                    <Pagination todoPerPage={this.state.todoPerPage} allTodos={this.state.todos.length} getCurrentPage={this.getCurrentPage} />\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}