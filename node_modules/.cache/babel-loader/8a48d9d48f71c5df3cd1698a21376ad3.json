{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julyg\\\\Desktop\\\\mytestreactapp\\\\src\\\\User\\\\UserList.js\";\nimport React, { Component } from 'react';\nimport UserItem from './UserItem';\nimport UserInfo from './UserInfo';\nimport { Route, Router } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  usersContainer: {\n    position: 'absolute',\n    width: '450px'\n  },\n  infoContainer: {\n    position: 'absolute',\n    top: '7.5%',\n    left: '50%',\n    border: '1px solid rgba(0,0,0,.125)',\n    width: '450px',\n    height: '500px',\n    padding: '.5rem 1rem',\n    borderRadius: '5px'\n  }\n};\nexport default class UserList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: [],\n      currentUser: 1\n    };\n    this.setCurrentUser = this.setCurrentUser.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(res => this.setState({\n      user: res\n    }));\n  }\n\n  setCurrentUser(id) {\n    this.setState({\n      currentUser: id\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.usersContainer,\n          className: \"container row\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: styles.usersContainer,\n            class: \"list-group\",\n            children: this.state.user.map(val => {\n              return /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/users/id/${val.id}\",\n                children: [\" \", val.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.infoContainer,\n          className: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/user/id/:uID\",\n              children: [\"render=\", ({\n                match\n              }) => /*#__PURE__*/_jsxDEV(UserInfo, {\n                user: this.state.user.find(u => u.id === match.params.uID)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/julyg/Desktop/mytestreactapp/src/User/UserList.js"],"names":["React","Component","UserItem","UserInfo","Route","Router","Link","styles","usersContainer","position","width","infoContainer","top","left","border","height","padding","borderRadius","UserList","constructor","props","state","user","currentUser","setCurrentUser","bind","componentDidMount","fetch","then","res","json","setState","id","render","map","val","username","match","find","u","params","uID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserItem from './UserItem';\r\nimport UserInfo from './UserInfo';\r\nimport { Route, Router } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = {\r\n    usersContainer: {\r\n        position: 'absolute',\r\n        width: '450px'\r\n    },\r\n    infoContainer: {\r\n        position: 'absolute',\r\n        top: '7.5%',\r\n        left: '50%',\r\n        border: '1px solid rgba(0,0,0,.125)',\r\n        width: '450px',\r\n        height: '500px',\r\n        padding: '.5rem 1rem',\r\n        borderRadius: '5px'\r\n    }\r\n};\r\n\r\nexport default class UserList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: [],\r\n            currentUser: 1\r\n        };\r\n        this.setCurrentUser = this.setCurrentUser.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://jsonplaceholder.typicode.com/users')\r\n            .then(res => res.json())\r\n            .then(res => this.setState({ user: res }));\r\n    }\r\n\r\n    setCurrentUser(id) {\r\n        this.setState({ currentUser: id })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n            <div className=\"main\">\r\n                <div style={styles.usersContainer} className=\"container row\">\r\n                    <ul style={styles.usersContainer} class=\"list-group\">\r\n                        {this.state.user.map((val) => {\r\n                            return (<Link to={\"/users/id/${val.id}\"} > {val.username} </Link>);\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div style={styles.infoContainer} className=\"info\">\r\n                    <ul className=\"list-group\">\r\n                        {/* {this.state.user.map((val) => {\r\n                        if (val.id === this.state.currentUser) {\r\n                            return <UserInfo user={val} />\r\n                        }\r\n                    })} */}\r\n                        <Route path=\"/user/id/:uID\">\r\n                            render={({ match }) => (\r\n                                <UserInfo user={this.state.user.find((u) => u.id === match.params.uID)} />\r\n                            )}\r\n                        </Route>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </Router>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}